{"ast":null,"code":"var _jsxFileName = \"/Users/ashutosh/Desktop/avalanche-faucet/client/src/components/FaucetForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { ClipLoader } from \"react-spinners\";\nimport Select from 'react-select';\nimport './styles/FaucetForm.css';\nimport ReCaptcha from './ReCaptcha';\nimport FooterBox from './FooterBox';\nimport queryString from 'query-string';\nimport { connectAccount } from './Metamask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FaucetForm = props => {\n  _s();\n\n  var _chainConfigs6, _chainConfigs7, _chainConfigs8, _chainConfigs8$RATELI, _chainConfigs9, _chainConfigs9$RATELI, _chainConfigs10, _chainConfigs11, _chainConfigs12;\n\n  const [chain, setChain] = useState(null);\n  const [token, setToken] = useState(null);\n  const [widgetID, setwidgetID] = useState(new Map());\n  const [recaptcha, setRecaptcha] = useState(undefined);\n  const [isV2, setIsV2] = useState(false);\n  const [chainConfigs, setChainConfigs] = useState([]);\n  const [inputAddress, setInputAddress] = useState(\"\");\n  const [address, setAddress] = useState(null);\n  const [faucetAddress, setFaucetAddress] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [tokenOptions, setTokenOptions] = useState([]);\n  const [balance, setBalance] = useState(\"0\");\n  const [shouldAllowSend, setShouldAllowSend] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFetchingBalance, setIsFetchingBalance] = useState(null);\n  const [sendTokenResponse, setSendTokenResponse] = useState({\n    txHash: null,\n    message: null\n  }); // Update chain configs\n\n  useEffect(() => {\n    setRecaptcha(new ReCaptcha(props.config.SITE_KEY, props.config.ACTION, props.config.V2_SITE_KEY, setwidgetID));\n    updateChainConfigs();\n    connectAccount(updateAddress, false);\n  }, []); // Update balance whenver chain changes or after transaction is processed\n\n  useEffect(() => {\n    updateBalance();\n  }, [chain, token, sendTokenResponse, chainConfigs]); // Make REQUEST button disabled if either address is not valid or balance is low\n\n  useEffect(() => {\n    if (address) {\n      var _chainConfigs, _chainConfigs2;\n\n      if (BigInt(balance) > calculateBaseUnit((_chainConfigs = chainConfigs[token]) === null || _chainConfigs === void 0 ? void 0 : _chainConfigs.DRIP_AMOUNT, (_chainConfigs2 = chainConfigs[token]) === null || _chainConfigs2 === void 0 ? void 0 : _chainConfigs2.DECIMALS)) {\n        setShouldAllowSend(true);\n        return;\n      }\n    }\n\n    setShouldAllowSend(false);\n  }, [address, balance]);\n  useEffect(() => {\n    updateFaucetAddress();\n  }, [chain, chainConfigs]);\n  useEffect(() => {\n    var _newOptions$;\n\n    let newOptions = [];\n    chainConfigs === null || chainConfigs === void 0 ? void 0 : chainConfigs.forEach((chain, i) => {\n      var _chainConfigs3;\n\n      let item = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: chain.NAME[0],\n          src: chain.IMAGE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), chain.NAME, chain.CONTRACTADDRESS && /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'rgb(180, 180, 183)',\n            fontSize: \"10px\",\n            marginLeft: \"5px\"\n          },\n          children: (_chainConfigs3 = chainConfigs[chainToIndex(chain.HOSTID) || 0]) === null || _chainConfigs3 === void 0 ? void 0 : _chainConfigs3.NAME\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 24\n      }, this);\n\n      if (!chain.CONTRACTADDRESS) {\n        newOptions.push({\n          label: item,\n          value: i,\n          search: chain.NAME\n        });\n      }\n    });\n    setOptions(newOptions);\n    setChain((_newOptions$ = newOptions[0]) === null || _newOptions$ === void 0 ? void 0 : _newOptions$.value);\n  }, [chainConfigs]);\n  useEffect(() => {\n    var _newOptions$2;\n\n    let newOptions = [];\n    chainConfigs === null || chainConfigs === void 0 ? void 0 : chainConfigs.forEach((chain, i) => {\n      const {\n        chain: ch\n      } = getChainParams();\n\n      let item = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"select-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: chain.NAME[0],\n          src: chain.IMAGE\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), chain.ID == ch ? chain.TOKEN : chain.NAME, /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'rgb(180, 180, 183)',\n            fontSize: \"10px\",\n            marginLeft: \"5px\"\n          },\n          children: chain.CONTRACTADDRESS ? \"ERC20\" : \"Native\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 24\n      }, this);\n\n      if (chain.CONTRACTADDRESS && chain.HOSTID == ch || chain.ID == ch) {\n        newOptions.push({\n          label: item,\n          value: i,\n          search: chain.NAME\n        });\n      }\n    });\n    setTokenOptions(newOptions);\n    setToken((_newOptions$2 = newOptions[0]) === null || _newOptions$2 === void 0 ? void 0 : _newOptions$2.value);\n  }, [chainConfigs, chain]);\n\n  const getConfigByTokenAndNetwork = (token, network) => {\n    let selectedConfig = 0;\n\n    try {\n      var _token, _network;\n\n      token = (_token = token) === null || _token === void 0 ? void 0 : _token.toUpperCase();\n      network = (_network = network) === null || _network === void 0 ? void 0 : _network.toUpperCase();\n      chainConfigs.forEach((chain, i) => {\n        if (chain.TOKEN == token && chain.HOSTID == network) {\n          selectedConfig = i;\n        }\n      });\n    } catch (err) {\n      console.log(err);\n    }\n\n    return selectedConfig;\n  };\n\n  let totalTokens = (tokenOptions === null || tokenOptions === void 0 ? void 0 : tokenOptions.length) === 0;\n  useEffect(() => {\n    const query = queryString.parse(window.location.search);\n    const {\n      address,\n      subnet,\n      erc20\n    } = query;\n    const tokenIndex = getConfigByTokenAndNetwork(erc20, subnet);\n\n    if (typeof address == \"string\") {\n      updateAddress(address);\n    }\n\n    if (typeof subnet == \"string\") {\n      setChain(chainToIndex(subnet));\n\n      if (typeof erc20 == \"string\") {\n        setToken(tokenIndex);\n      }\n    } else {\n      setChain(0);\n    }\n  }, [window.location.search, options, totalTokens]); // API calls\n\n  async function updateChainConfigs() {\n    var _response$data;\n\n    const response = await props.axios.get(props.config.api.getChainConfigs);\n    setChainConfigs(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.configs);\n  }\n\n  function getChainParams() {\n    var _chainConfigs4, _chainConfigs5;\n\n    let params = {\n      chain: (_chainConfigs4 = chainConfigs[chain]) === null || _chainConfigs4 === void 0 ? void 0 : _chainConfigs4.ID,\n      erc20: (_chainConfigs5 = chainConfigs[token]) === null || _chainConfigs5 === void 0 ? void 0 : _chainConfigs5.ID\n    };\n    return params;\n  }\n\n  async function updateBalance() {\n    // Abort pending requests\n    const controller = new AbortController();\n\n    if (isFetchingBalance) {\n      isFetchingBalance.abort();\n    }\n\n    setIsFetchingBalance(controller);\n\n    if ((chain || chain == 0) && chainConfigs.length > 0) {\n      var _response$data2, _response$data3;\n\n      let {\n        chain,\n        erc20\n      } = getChainParams();\n      const response = await props.axios.get(props.config.api.getBalance, {\n        params: {\n          chain,\n          erc20\n        },\n        signal: controller.signal\n      });\n\n      if (response !== null && response !== void 0 && (_response$data2 = response.data) !== null && _response$data2 !== void 0 && _response$data2.balance || (response === null || response === void 0 ? void 0 : (_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : _response$data3.balance) == 0) {\n        var _response$data4;\n\n        setBalance(response === null || response === void 0 ? void 0 : (_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : _response$data4.balance);\n      }\n    }\n  }\n\n  async function updateFaucetAddress() {\n    if ((chain || chain == 0) && chainConfigs.length > 0) {\n      let {\n        chain\n      } = getChainParams();\n      const response = await props.axios.get(props.config.api.faucetAddress, {\n        params: {\n          chain\n        }\n      });\n\n      if (response !== null && response !== void 0 && response.data) {\n        var _response$data5;\n\n        setFaucetAddress(response === null || response === void 0 ? void 0 : (_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : _response$data5.address);\n      }\n    }\n  }\n\n  function calculateBaseUnit() {\n    let amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"0\";\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n\n    for (let i = 0; i < decimals; i++) {\n      amount += \"0\";\n    }\n\n    return BigInt(amount);\n  }\n\n  function calculateLargestUnit() {\n    let amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"0\";\n    let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n    let base = \"1\";\n\n    for (let i = 0; i < decimals; i++) {\n      base += \"0\";\n    }\n\n    return (BigInt(amount) / BigInt(base)).toString();\n  }\n\n  function chainToIndex(id) {\n    if ((chainConfigs === null || chainConfigs === void 0 ? void 0 : chainConfigs.length) > 0) {\n      if (typeof id == \"string\") {\n        id = id.toUpperCase();\n      }\n\n      let index = 0;\n      chainConfigs.forEach((chain, i) => {\n        if (id == chain.ID) {\n          index = i;\n        }\n      });\n      return index;\n    } else {\n      return null;\n    }\n  }\n\n  function updateAddress(addr) {\n    setInputAddress(addr);\n\n    if (addr) {\n      if (ethers.utils.isAddress(addr)) {\n        setAddress(addr);\n      } else {\n        setAddress(null);\n      }\n    } else if (address != null) {\n      setAddress(null);\n    }\n  }\n\n  async function getCaptchaToken() {\n    let index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    const {\n      token,\n      v2Token\n    } = await recaptcha.getToken(isV2, widgetID, index);\n    return {\n      token,\n      v2Token\n    };\n  }\n\n  function updateChain(option) {\n    let chainNum = option.value;\n\n    if (chainNum >= 0 && chainNum < chainConfigs.length) {\n      setChain(chainNum);\n      back();\n    }\n  }\n\n  function updateToken(option) {\n    let tokenNum = option.value;\n\n    if (tokenNum >= 0 && tokenNum < chainConfigs.length) {\n      setToken(tokenNum);\n      back();\n    }\n  }\n\n  const ifCaptchaFailed = function (data) {\n    let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let reload = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (typeof (data === null || data === void 0 ? void 0 : data.message) == \"string\") {\n      if (data.message.includes(\"Captcha verification failed\")) {\n        setIsV2(true);\n        recaptcha === null || recaptcha === void 0 ? void 0 : recaptcha.loadV2Captcha(props.config.V2_SITE_KEY, widgetID, index, reload);\n      }\n    }\n  };\n\n  async function sendToken() {\n    var _data, _data2;\n\n    if (!shouldAllowSend) {\n      return;\n    }\n\n    let data;\n\n    try {\n      setIsLoading(true);\n      const {\n        token,\n        v2Token\n      } = await getCaptchaToken();\n      let {\n        chain,\n        erc20\n      } = getChainParams();\n      const response = await props.axios.post(props.config.api.sendToken, {\n        address,\n        token,\n        v2Token,\n        chain,\n        erc20\n      });\n      data = response === null || response === void 0 ? void 0 : response.data;\n    } catch (err) {\n      var _err$response;\n\n      data = (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err;\n    }\n\n    ifCaptchaFailed(data);\n    setSendTokenResponse({\n      txHash: (_data = data) === null || _data === void 0 ? void 0 : _data.txHash,\n      message: (_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.message\n    });\n    setIsLoading(false);\n  }\n\n  const getOptionByValue = value => {\n    let selectedOption = options[0];\n    options.forEach(option => {\n      if (option.value == value) {\n        selectedOption = option;\n      }\n    });\n    return selectedOption;\n  };\n\n  const getTokenOptionByValue = value => {\n    let selectedOption = tokenOptions[0];\n    tokenOptions.forEach(option => {\n      if (option.value == value) {\n        selectedOption = option;\n      }\n    });\n    return selectedOption;\n  };\n\n  const customStyles = {\n    control: (base, state) => ({ ...base,\n      background: \"#333\",\n      borderRadius: state.isFocused ? \"5px 5px 0 0\" : 5,\n      borderColor: state.isFocused ? \"white\" : \"#333\",\n      boxShadow: null,\n      \"&:hover\": {\n        borderColor: \"white\"\n      }\n    }),\n    menu: base => ({ ...base,\n      borderRadius: 0,\n      marginTop: 0,\n      background: \"rgb(45, 45, 45)\",\n      color: \"white\"\n    }),\n    menuList: base => ({ ...base,\n      padding: 0,\n      \"::-webkit-scrollbar\": {\n        width: \"2px\"\n      },\n      \"::-webkit-scrollbar-track\": {\n        background: \"black\"\n      },\n      \"::-webkit-scrollbar-thumb\": {\n        background: \"#888\"\n      },\n      \"::-webkit-scrollbar-thumb:hover\": {\n        background: \"#555\"\n      }\n    }),\n    option: (styles, _ref) => {\n      let {\n        isFocused,\n        isSelected\n      } = _ref;\n      return { ...styles,\n        background: isFocused ? 'black' : isSelected ? '#333' : undefined,\n        zIndex: 1\n      };\n    },\n    input: base => ({ ...base,\n      color: \"white\"\n    }),\n    singleValue: base => ({ ...base,\n      color: \"white\"\n    })\n  };\n\n  const ChainDropdown = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      marginTop: \"5px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      value: getOptionByValue(chain),\n      onChange: updateChain,\n      styles: customStyles,\n      getOptionValue: option => option.search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 422,\n    columnNumber: 9\n  }, this);\n\n  const TokenDropdown = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      options: tokenOptions,\n      value: getTokenOptionByValue(token),\n      onChange: updateToken,\n      styles: customStyles,\n      getOptionValue: option => option.search\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 9\n  }, this);\n\n  const resetRecaptcha = () => {\n    setIsV2(false);\n    recaptcha.resetV2Captcha(widgetID);\n  };\n\n  const back = () => {\n    resetRecaptcha();\n    setSendTokenResponse({\n      txHash: null,\n      message: null\n    });\n  };\n\n  const toString = mins => {\n    if (mins < 60) {\n      return `${mins} minute${mins > 1 ? 's' : ''}`;\n    } else {\n      const hour = ~~(mins / 60);\n      const minute = mins % 60;\n\n      if (minute == 0) {\n        return `${hour} hour${hour > 1 ? 's' : ''}`;\n      } else {\n        return `${hour} hour${hour > 1 ? 's' : ''} and ${minute} minute${minute > 1 ? 's' : ''}`;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner\",\n        style: {\n          backgroundImage: `url(${props.config.banner})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"box-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"grey\"\n              },\n              children: \"Select Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ChainDropdown, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: \"100%\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"grey\",\n                  fontSize: \"12px\",\n                  float: \"right\"\n                },\n                children: [\"Faucet balance: \", calculateLargestUnit(balance, (_chainConfigs6 = chainConfigs[token]) === null || _chainConfigs6 === void 0 ? void 0 : _chainConfigs6.DECIMALS), \" \", (_chainConfigs7 = chainConfigs[token]) === null || _chainConfigs7 === void 0 ? void 0 : _chainConfigs7.TOKEN]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: \"grey\",\n                  fontSize: \"12px\"\n                },\n                children: \"Select Token\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TokenDropdown, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: sendTokenResponse !== null && sendTokenResponse !== void 0 && sendTokenResponse.txHash ? \"none\" : \"block\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rate-limit-text\",\n            children: [\"Drops are limited to\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [(_chainConfigs8 = chainConfigs[token]) === null || _chainConfigs8 === void 0 ? void 0 : (_chainConfigs8$RATELI = _chainConfigs8.RATELIMIT) === null || _chainConfigs8$RATELI === void 0 ? void 0 : _chainConfigs8$RATELI.MAX_LIMIT, \" request in \", toString((_chainConfigs9 = chainConfigs[token]) === null || _chainConfigs9 === void 0 ? void 0 : (_chainConfigs9$RATELI = _chainConfigs9.RATELIMIT) === null || _chainConfigs9$RATELI === void 0 ? void 0 : _chainConfigs9$RATELI.WINDOW_SIZE), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"address-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Hexadecimal Address (0x...)\",\n              value: inputAddress || \"\",\n              onChange: e => updateAddress(e.target.value),\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"connect-metamask\",\n              onClick: () => connectAccount(updateAddress),\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"metamask\",\n                src: \"/memtamask.webp\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 33\n              }, this), \"Connect\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rate-limit-text\",\n            style: {\n              color: \"red\"\n            },\n            children: sendTokenResponse === null || sendTokenResponse === void 0 ? void 0 : sendTokenResponse.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"v2-recaptcha\",\n            style: {\n              marginTop: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"beta-alert\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"This is a testnet faucet. Funds are not real.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: shouldAllowSend ? 'send-button' : 'send-button-disabled',\n            onClick: sendToken,\n            children: isLoading ? /*#__PURE__*/_jsxDEV(ClipLoader, {\n              size: \"20px\",\n              speedMultiplier: 0.3,\n              color: \"403F40\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Request \", (_chainConfigs10 = chainConfigs[token || 0]) === null || _chainConfigs10 === void 0 ? void 0 : _chainConfigs10.DRIP_AMOUNT, \" \", (_chainConfigs11 = chainConfigs[token || 0]) === null || _chainConfigs11 === void 0 ? void 0 : _chainConfigs11.TOKEN]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: sendTokenResponse !== null && sendTokenResponse !== void 0 && sendTokenResponse.txHash ? \"block\" : \"none\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"rate-limit-text\",\n            children: sendTokenResponse === null || sendTokenResponse === void 0 ? void 0 : sendTokenResponse.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bold-text\",\n              children: \"Transaction ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"rate-limit-text\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                target: '_blank',\n                href: ((_chainConfigs12 = chainConfigs[token]) === null || _chainConfigs12 === void 0 ? void 0 : _chainConfigs12.EXPLORER) + '/tx/' + (sendTokenResponse === null || sendTokenResponse === void 0 ? void 0 : sendTokenResponse.txHash),\n                rel: \"noreferrer\",\n                children: sendTokenResponse === null || sendTokenResponse === void 0 ? void 0 : sendTokenResponse.txHash\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 551,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: back,\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FooterBox, {\n      chain: chain,\n      token: token,\n      chainConfigs: chainConfigs,\n      chainToIndex: chainToIndex,\n      faucetAddress: faucetAddress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FaucetForm, \"6H2qzoQBhNkt8P3PSM5E/yLafA8=\");\n\n_c = FaucetForm;\nexport default FaucetForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"FaucetForm\");","map":{"version":3,"names":["useState","useEffect","ethers","ClipLoader","Select","ReCaptcha","FooterBox","queryString","connectAccount","FaucetForm","props","chain","setChain","token","setToken","widgetID","setwidgetID","Map","recaptcha","setRecaptcha","undefined","isV2","setIsV2","chainConfigs","setChainConfigs","inputAddress","setInputAddress","address","setAddress","faucetAddress","setFaucetAddress","options","setOptions","tokenOptions","setTokenOptions","balance","setBalance","shouldAllowSend","setShouldAllowSend","isLoading","setIsLoading","isFetchingBalance","setIsFetchingBalance","sendTokenResponse","setSendTokenResponse","txHash","message","config","SITE_KEY","ACTION","V2_SITE_KEY","updateChainConfigs","updateAddress","updateBalance","BigInt","calculateBaseUnit","DRIP_AMOUNT","DECIMALS","updateFaucetAddress","newOptions","forEach","i","item","NAME","IMAGE","CONTRACTADDRESS","color","fontSize","marginLeft","chainToIndex","HOSTID","push","label","value","search","ch","getChainParams","ID","TOKEN","getConfigByTokenAndNetwork","network","selectedConfig","toUpperCase","err","console","log","totalTokens","length","query","parse","window","location","subnet","erc20","tokenIndex","response","axios","get","api","getChainConfigs","data","configs","params","controller","AbortController","abort","getBalance","signal","amount","decimals","calculateLargestUnit","base","toString","id","index","addr","utils","isAddress","getCaptchaToken","v2Token","getToken","updateChain","option","chainNum","back","updateToken","tokenNum","ifCaptchaFailed","reload","includes","loadV2Captcha","sendToken","post","getOptionByValue","selectedOption","getTokenOptionByValue","customStyles","control","state","background","borderRadius","isFocused","borderColor","boxShadow","menu","marginTop","menuList","padding","width","styles","isSelected","zIndex","input","singleValue","ChainDropdown","TokenDropdown","resetRecaptcha","resetV2Captcha","mins","hour","minute","backgroundImage","banner","float","display","RATELIMIT","MAX_LIMIT","WINDOW_SIZE","e","target","EXPLORER"],"sources":["/Users/ashutosh/Desktop/avalanche-faucet/client/src/components/FaucetForm.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { ethers } from 'ethers'\nimport { ClipLoader } from \"react-spinners\"\nimport Select from 'react-select'\n\nimport './styles/FaucetForm.css'\nimport ReCaptcha from './ReCaptcha'\nimport FooterBox from './FooterBox'\nimport queryString from 'query-string'\nimport { DropdownOption } from './types'\nimport { connectAccount } from './Metamask'\nimport { AxiosResponse } from 'axios'\n\nconst FaucetForm = (props: any) => {\n    const [chain, setChain] = useState<number | null>(null)\n    const [token, setToken] = useState<number | null>(null)\n    const [widgetID, setwidgetID] = useState(new Map())\n    const [recaptcha, setRecaptcha] = useState<ReCaptcha | undefined>(undefined)\n    const [isV2, setIsV2] = useState<boolean>(false)\n    const [chainConfigs, setChainConfigs] = useState<any>([])\n    const [inputAddress, setInputAddress] = useState<string>(\"\")\n    const [address, setAddress] = useState<string | null>(null)\n    const [faucetAddress, setFaucetAddress] = useState<string | null>(null)\n    const [options, setOptions] = useState<DropdownOption[]>([])\n    const [tokenOptions, setTokenOptions] = useState<DropdownOption[]>([]);\n    const [balance, setBalance] = useState<string>(\"0\")\n    const [shouldAllowSend, setShouldAllowSend] = useState<boolean>(false)\n    const [isLoading, setIsLoading] = useState<boolean>(false)\n    const [isFetchingBalance, setIsFetchingBalance] = useState<AbortController | null>(null)\n    const [sendTokenResponse, setSendTokenResponse] = useState<any>({\n        txHash: null,\n        message: null\n    })\n\n    // Update chain configs\n    useEffect(() => {\n        setRecaptcha(new ReCaptcha(\n            props.config.SITE_KEY,\n            props.config.ACTION,\n            props.config.V2_SITE_KEY,\n            setwidgetID\n        ))\n        updateChainConfigs()\n        connectAccount(updateAddress, false)\n\n    }, [])\n\n    // Update balance whenver chain changes or after transaction is processed\n    useEffect(() => {\n        updateBalance()\n    }, [chain, token, sendTokenResponse, chainConfigs])\n\n    // Make REQUEST button disabled if either address is not valid or balance is low\n    useEffect(() => {\n        if(address) {\n            if(BigInt(balance) > calculateBaseUnit(chainConfigs[token!]?.DRIP_AMOUNT, chainConfigs[token!]?.DECIMALS)) {\n                setShouldAllowSend(true)\n                return\n            }\n        }\n        \n        setShouldAllowSend(false)\n    }, [address, balance])\n\n    useEffect(() => {\n        updateFaucetAddress()\n    }, [chain, chainConfigs])\n\n    useEffect(() => {\n        let newOptions: DropdownOption[] = []\n        \n        chainConfigs?.forEach((chain: any, i: number) => {\n            let item = <div className='select-dropdown'>\n                <img alt = { chain.NAME[0] } src = { chain.IMAGE } />\n                { chain.NAME }\n\n                {\n                    chain.CONTRACTADDRESS &&\n                    <span style={{color: 'rgb(180, 180, 183)', fontSize: \"10px\", marginLeft: \"5px\"}}>\n                        {\n                            chainConfigs[chainToIndex(chain.HOSTID) || 0]?.NAME\n                        }\n                    </span>\n                }\n            </div>\n\n            if(!chain.CONTRACTADDRESS) {\n                newOptions.push({\n                    label: item,\n                    value: i,\n                    search: chain.NAME\n                })\n            }\n        })\n        \n        setOptions(newOptions)\n        setChain(newOptions[0]?.value)\n    }, [chainConfigs])\n\n    useEffect(() => {\n        let newOptions: DropdownOption[] = []\n        \n        chainConfigs?.forEach((chain: any, i: number) => {\n            const { chain: ch } = getChainParams();\n\n            let item = <div className='select-dropdown'>\n                <img alt = { chain.NAME[0] } src = { chain.IMAGE } />\n                { chain.ID == ch ? chain.TOKEN : chain.NAME }\n\n                <span style={{color: 'rgb(180, 180, 183)', fontSize: \"10px\", marginLeft: \"5px\"}}>\n                    {\n                        chain.CONTRACTADDRESS ?\n                        \"ERC20\" :\n                        \"Native\"\n                    }\n                </span>\n            </div>\n\n            if((chain.CONTRACTADDRESS && chain.HOSTID == ch) || chain.ID == ch) {\n                newOptions.push({\n                    label: item,\n                    value: i,\n                    search: chain.NAME\n                })\n            }\n        })\n\n        setTokenOptions(newOptions)\n        setToken(newOptions[0]?.value)\n    }, [chainConfigs, chain])\n\n    const getConfigByTokenAndNetwork = (token: any, network: any): number => {\n        let selectedConfig = 0;\n\n        try {\n            token = token?.toUpperCase();\n            network = network?.toUpperCase();\n            \n            chainConfigs.forEach((chain: any, i: number): any => {\n                if(chain.TOKEN == token && chain.HOSTID == network) {\n                    selectedConfig = i;\n                }\n            })\n        } catch(err: any) {\n            console.log(err)\n        }\n\n        return selectedConfig;\n    }\n\n    let totalTokens: boolean = tokenOptions?.length === 0;\n\n    useEffect(() => {\n        const query = queryString.parse(window.location.search)\n        \n        const { address, subnet, erc20 } = query\n\n        const tokenIndex: number = getConfigByTokenAndNetwork(erc20, subnet)\n        \n        if(typeof address == \"string\") {\n            updateAddress(address)\n        }\n\n        if(typeof subnet == \"string\") {\n            setChain(chainToIndex(subnet))\n            if(typeof erc20 == \"string\") {\n                setToken(tokenIndex)\n            }\n        } else {\n            setChain(0)\n        }\n    }, [window.location.search, options, totalTokens])\n\n    // API calls\n    async function updateChainConfigs(): Promise<void> {\n        const response: AxiosResponse = await props.axios.get(\n            props.config.api.getChainConfigs\n        )\n        setChainConfigs(response?.data?.configs)\n    }\n\n    function getChainParams(): {chain: string, erc20: string} {\n        let params = {\n            chain: chainConfigs[chain!]?.ID,\n            erc20: chainConfigs[token!]?.ID\n        }\n\n        return params\n    }\n\n    async function updateBalance(): Promise<void> {\n        // Abort pending requests\n        const controller = new AbortController();\n        if(isFetchingBalance) {\n            isFetchingBalance.abort()\n        }\n        setIsFetchingBalance(controller)\n\n        if((chain || chain == 0) && chainConfigs.length > 0) {\n            let { chain, erc20 } = getChainParams()\n            \n            const response: AxiosResponse = await props.axios.get(props.config.api.getBalance, {\n                params: {\n                    chain,\n                    erc20\n                },\n                signal: controller.signal\n            })\n        \n            if(response?.data?.balance || response?.data?.balance == 0) {\n                setBalance(response?.data?.balance)\n            }\n        }\n    }\n\n    async function updateFaucetAddress(): Promise<void> {\n        if((chain || chain == 0) && chainConfigs.length > 0) {\n            let { chain } = getChainParams()\n            \n            const response: AxiosResponse = await props.axios.get(props.config.api.faucetAddress, {\n                params: {\n                    chain\n                }\n            })\n            \n            if(response?.data) {\n                setFaucetAddress(response?.data?.address)\n            }\n        }\n    }\n\n    function calculateBaseUnit(amount: string = \"0\", decimals: number = 18): BigInt {\n        for(let i = 0; i < decimals; i++) {\n            amount += \"0\"\n        }\n        return BigInt(amount)\n    }\n\n    function calculateLargestUnit(amount: string = \"0\", decimals: number = 18): string {\n        let base = \"1\"\n        for(let i = 0; i < decimals; i++) {\n            base += \"0\"\n        }\n        return (BigInt(amount) / BigInt(base)).toString()\n    }\n\n    function chainToIndex(id: any): number | null {\n        if(chainConfigs?.length > 0) {\n            if(typeof id == \"string\") {\n                id = id.toUpperCase()\n            }\n            let index: number = 0\n            chainConfigs.forEach((chain: any, i: number) => {\n                if(id == chain.ID) {\n                    index = i\n                }\n            })\n            return index\n        } else {\n            return null\n        }\n    }\n\n    function updateAddress(addr: any): void {\n        setInputAddress(addr!)\n        \n        if (addr) {\n            if (ethers.utils.isAddress(addr)) {\n                setAddress(addr)\n            } else {\n                setAddress(null)\n            }\n        } else if (address != null) {\n            setAddress(null)\n        }\n    }\n\n    async function getCaptchaToken(index: number = 0): Promise<{token?:string, v2Token?: string}> {\n        const { token, v2Token } = await recaptcha!.getToken(isV2, widgetID, index)\n        return { token, v2Token }\n    }\n\n    function updateChain(option: any): void {\n        let chainNum: number = option.value\n        \n        if(chainNum >= 0 &&  chainNum < chainConfigs.length) {\n            setChain(chainNum)\n            back()\n        }\n    }\n\n    function updateToken(option: any): void {\n        let tokenNum: number = option.value\n        \n        if(tokenNum >= 0 &&  tokenNum < chainConfigs.length) {\n            setToken(tokenNum)\n            back()\n        }\n    }\n\n    const ifCaptchaFailed = (data: any, index: number = 0, reload: boolean = false) => {\n        if(typeof data?.message == \"string\") {\n            if(data.message.includes(\"Captcha verification failed\")) {\n                setIsV2(true)\n                recaptcha?.loadV2Captcha(props.config.V2_SITE_KEY, widgetID, index, reload);\n            }\n        }\n    }\n\n    async function sendToken(): Promise<void> {\n        if(!shouldAllowSend) {\n            return\n        } \n        let data: any\n        try {\n            setIsLoading(true)\n\n            const { token, v2Token } = await getCaptchaToken()\n\n            let { chain, erc20 } = getChainParams()\n\n            const response = await props.axios.post(props.config.api.sendToken, {\n                address,\n                token,\n                v2Token,\n                chain,\n                erc20\n            })\n            data = response?.data\n        } catch(err: any) {\n            data = err?.response?.data || err\n        }\n\n        ifCaptchaFailed(data)\n\n        setSendTokenResponse({\n            txHash: data?.txHash,\n            message: data?.message\n        })\n\n        setIsLoading(false)\n    }\n\n    const getOptionByValue = (value: any): DropdownOption => {\n        let selectedOption: DropdownOption = options[0]\n        options.forEach((option: DropdownOption): void => {\n            if(option.value == value) {\n                selectedOption = option\n            }\n        })\n        return selectedOption\n    }\n\n    const getTokenOptionByValue = (value: any): DropdownOption => {\n        let selectedOption: DropdownOption = tokenOptions[0]\n        tokenOptions.forEach((option: DropdownOption): void => {\n            if(option.value == value) {\n                selectedOption = option\n            }\n        })\n        return selectedOption\n    }\n\n    const customStyles = {\n        control: (base: any, state: { isFocused: any }) => ({\n            ...base,\n            background: \"#333\",\n            borderRadius: state.isFocused ? \"5px 5px 0 0\" : 5,\n            borderColor: state.isFocused ? \"white\" : \"#333\",\n            boxShadow: null,\n            \"&:hover\": {\n                borderColor: \"white\"\n            }\n        }),\n        menu: (base: any) => ({\n            ...base,\n            borderRadius: 0,\n            marginTop: 0,\n            background: \"rgb(45, 45, 45)\",\n            color: \"white\"\n        }),\n        menuList: (base: any) => ({\n            ...base,\n            padding: 0,\n            \"::-webkit-scrollbar\": {\n                width: \"2px\"\n            },\n            \"::-webkit-scrollbar-track\": {\n                background: \"black\"\n            },\n            \"::-webkit-scrollbar-thumb\": {\n                background: \"#888\"\n            },\n            \"::-webkit-scrollbar-thumb:hover\": {\n                background: \"#555\"\n            }\n        }),\n        option: (styles: any, {isFocused, isSelected}: any) => ({\n            ...styles,\n            background: isFocused\n                    ?\n                    'black'\n                    :\n                    isSelected\n                    ?\n                    '#333'\n                    :\n                    undefined,\n            zIndex: 1\n        }),\n        input: (base: any) => ({\n            ...base,\n            color: \"white\"\n        }),\n        singleValue: (base: any) => ({\n            ...base,\n            color: \"white\"\n        })\n    }\n\n    const ChainDropdown = () => (\n        <div style={{width: \"100%\", marginTop: \"5px\"}}>\n            <Select\n                options={options}\n                value={getOptionByValue(chain)}\n                onChange={updateChain}\n                styles={customStyles}\n                getOptionValue ={(option: any)=>option.search}\n            />\n        </div>\n    )\n\n    const TokenDropdown = () => (\n        <div style={{width: \"100%\"}}>\n            <Select\n                options={tokenOptions}\n                value={getTokenOptionByValue(token)}\n                onChange={updateToken}\n                styles={customStyles}\n                getOptionValue ={(option: any)=>option.search}\n            />\n        </div>\n    )\n\n    const resetRecaptcha = (): void => {\n        setIsV2(false)\n        recaptcha!.resetV2Captcha(widgetID)\n    }\n\n    const back = (): void => {\n        resetRecaptcha()\n        setSendTokenResponse({\n            txHash: null,\n            message: null\n        })\n    }\n\n    const toString = (mins: number): string => {\n        if(mins < 60) {\n            return `${mins} minute${mins > 1 ? 's' : ''}`\n        } else {\n            const hour = ~~(mins / 60)\n            const minute = mins % 60\n\n            if(minute == 0) {\n                return `${hour} hour${hour > 1 ? 's' : ''}`\n            } else {\n                return `${hour} hour${hour > 1 ? 's' : ''} and ${minute} minute${minute > 1 ? 's' : ''}`\n            }\n        }\n    }\n\n    return (\n        <div className='container'>\n            <div className = \"box\">\n                <div className='banner' style={{backgroundImage: `url(${props.config.banner})`}}/>\n\n                <div className='box-content'>\n                    <div className='box-header'>\n                        <span>\n                            <span style={{color: \"grey\"}}>Select Network</span>\n                        </span>\n\n                        <ChainDropdown /> <br/>\n\n                        <div>\n                            <div style={{width: \"100%\"}}>\n                                <span style={{color: \"grey\", fontSize: \"12px\", float: \"right\"}}>\n                                    Faucet balance: {calculateLargestUnit(balance, chainConfigs[token!]?.DECIMALS)} {chainConfigs[token!]?.TOKEN}\n                                </span>\n\n                                <span style={{color: \"grey\", fontSize: \"12px\"}}>\n                                    Select Token\n                                </span>\n\n                                <TokenDropdown/>\n                            </div>\n                        </div>\n                    </div>\n\n                    <br/>\n\n                    <div style={{ display: sendTokenResponse?.txHash ? \"none\" : \"block\" }}>\n                        <p className='rate-limit-text'>\n                            Drops are limited to \n                            <span>\n                                {chainConfigs[token!]?.RATELIMIT?.MAX_LIMIT} request in {toString(chainConfigs[token!]?.RATELIMIT?.WINDOW_SIZE)}.\n                            </span>\n                        </p>\n\n                        <div className='address-input'>\n                            <input\n                                placeholder='Hexadecimal Address (0x...)'\n                                value={inputAddress || \"\"}\n                                onChange={(e) => updateAddress(e.target.value)}\n                                autoFocus\n                            />\n\n                            <span className='connect-metamask' onClick={ () => connectAccount(updateAddress) }>\n                                <img alt='metamask' src=\"/memtamask.webp\"/>\n                                Connect\n                            </span>\n                        </div>\n                        <span className='rate-limit-text' style={{color: \"red\"}}>{sendTokenResponse?.message}</span>\n\n                        <div className='v2-recaptcha' style={{marginTop: \"10px\"}}></div>\n                        \n                        <div className=\"beta-alert\">\n                            <p>This is a testnet faucet. Funds are not real.</p>\n                        </div>\n                    \n                        <button className={shouldAllowSend ? 'send-button' : 'send-button-disabled'} onClick={sendToken}>\n                            {\n                                isLoading\n                                ?\n                                <ClipLoader size=\"20px\" speedMultiplier={0.3} color=\"403F40\"/>\n                                :\n                                <span>Request {chainConfigs[token || 0]?.DRIP_AMOUNT} {chainConfigs[token || 0]?.TOKEN}</span>\n                            }\n                        </button>\n                    </div>\n                    \n                    <div style={{ display: sendTokenResponse?.txHash ? \"block\" : \"none\" }}>\n                        <p className='rate-limit-text'>\n                            {sendTokenResponse?.message}\n                        </p>\n\n                        <div>\n                            <span className='bold-text'>Transaction ID</span>\n                            <p className='rate-limit-text'>\n                                <a\n                                    target = {'_blank'}\n                                    href = {chainConfigs[token!]?.EXPLORER + '/tx/' + sendTokenResponse?.txHash}\n                                    rel = \"noreferrer\"\n                                >\n                                    {sendTokenResponse?.txHash}\n                                </a>\n                            </p>\n                        </div>\n\n                        <button className='back-button' onClick={back}>Back</button>\n                    </div>\n                </div>\n            </div>\n\n            <FooterBox\n                chain = {chain}\n                token = {token}\n                chainConfigs = {chainConfigs}\n                chainToIndex = {chainToIndex}\n                faucetAddress = {faucetAddress}\n            />\n        </div>\n\n\n    )\n}\n\nexport default FaucetForm"],"mappings":"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"},"metadata":{},"sourceType":"module"}