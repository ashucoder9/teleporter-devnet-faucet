var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "@emotion/react/jsx-runtime";
/** @jsxImportSource @emotion/react */
import * as React from "react";
import { keyframes, css } from "@emotion/react";
import { sizeMarginDefaults, cssValue, parseLengthAndUnit } from "./helpers";
var grid = keyframes(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  0% {transform: scale(1)}\n  50% {transform: scale(0.5); opacity: 0.7}\n  100% {transform: scale(1);opacity: 1}\n"], ["\n  0% {transform: scale(1)}\n  50% {transform: scale(0.5); opacity: 0.7}\n  100% {transform: scale(1);opacity: 1}\n"])));
var random = function (top) { return Math.random() * top; };
var Loader = /** @class */ (function (_super) {
    __extends(Loader, _super);
    function Loader() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.style = function (rand) {
            var _a = _this.props, color = _a.color, size = _a.size, margin = _a.margin, speedMultiplier = _a.speedMultiplier;
            return css(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n      display: inline-block;\n      background-color: ", ";\n      width: ", ";\n      height: ", ";\n      margin: ", ";\n      border-radius: 100%;\n      animation-fill-mode: \"both\";\n      animation: ", " ", "s ", "s infinite ease;\n    "], ["\n      display: inline-block;\n      background-color: ", ";\n      width: ", ";\n      height: ", ";\n      margin: ", ";\n      border-radius: 100%;\n      animation-fill-mode: \"both\";\n      animation: ", " ", "s ", "s infinite ease;\n    "])), color, cssValue(size), cssValue(size), cssValue(margin), grid, (rand / 100 + 0.6) / speedMultiplier, rand / 100 - 0.2);
        };
        _this.wrapper = function () {
            var _a = _this.props, size = _a.size, margin = _a.margin;
            var sizeWithUnit = parseLengthAndUnit(size);
            var marginWithUnit = parseLengthAndUnit(margin);
            var width = "" + (parseFloat(sizeWithUnit.value.toString()) * 3 + parseFloat(marginWithUnit.value.toString()) * 6) + sizeWithUnit.unit;
            return css(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n      width: ", ";\n      font-size: 0;\n    "], ["\n      width: ", ";\n      font-size: 0;\n    "])), width);
        };
        return _this;
    }
    Loader.prototype.render = function () {
        var _a = this.props, loading = _a.loading, css = _a.css;
        return loading ? (_jsxs("span", __assign({ css: [this.wrapper(), css] }, { children: [_jsx("span", { css: this.style(random(100)) }, void 0), _jsx("span", { css: this.style(random(100)) }, void 0), _jsx("span", { css: this.style(random(100)) }, void 0), _jsx("span", { css: this.style(random(100)) }, void 0), _jsx("span", { css: this.style(random(100)) }, void 0), _jsx("span", { css: this.style(random(100)) }, void 0), _jsx("span", { css: this.style(random(100)) }, void 0), _jsx("span", { css: this.style(random(100)) }, void 0), _jsx("span", { css: this.style(random(100)) }, void 0)] }), void 0)) : null;
    };
    Loader.defaultProps = sizeMarginDefaults(15);
    return Loader;
}(React.PureComponent));
export default Loader;
var templateObject_1, templateObject_2, templateObject_3;
